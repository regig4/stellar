#pragma checksum "C:\Users\Bartek\Source\Repos\stellar\StellarApp\Views\Account\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "da736907e7b45eaaf44328f0a48152a866af2fcd"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Account_Index), @"mvc.1.0.view", @"/Views/Account/Index.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Account/Index.cshtml", typeof(AspNetCore.Views_Account_Index))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Users\Bartek\Source\Repos\stellar\StellarApp\Views\_ViewImports.cshtml"
using StellarApp;

#line default
#line hidden
#line 2 "C:\Users\Bartek\Source\Repos\stellar\StellarApp\Views\_ViewImports.cshtml"
using StellarApp.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"da736907e7b45eaaf44328f0a48152a866af2fcd", @"/Views/Account/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"cad1b55ce5ee7c8f4e9ed6d41bd68b5254332d34", @"/Views/_ViewImports.cshtml")]
    public class Views_Account_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#line 1 "C:\Users\Bartek\Source\Repos\stellar\StellarApp\Views\Account\Index.cshtml"
  
    ViewData["Title"] = "Home Page";

#line default
#line hidden
            BeginContext(45, 2604, true);
            WriteLiteral(@"<div class=""col""><h1>eCoin App</h1></div>
<strong>Usage:</strong>
<br />
Make request with Postman, Fiddler or simply copying url into address bar
<br />

<p>
    Api provides a way to:
    <ul>
        <li>create new Stellar account based on random key</li>
        <li>get information about existing account</li>
        <li>create trustline on eCoin asset</li>
        <li>send eCoin between accounts</li>
    </ul>
</p>

<div class=""card"">
    <img class=""card-img-top img-fluid"" src=""https://placehold.it/320x180"" alt=""Alternatywny opis obrazka"">
    <div class=""card-block"">
        <h4 class=""card-title"">Tytuł karty</h4>
        <p class=""card-text"">Treść naszej karty, czyli jakiś opis czy cokolwiek chcemy w niej zamieścić.</p>
        <a href=""#"" class=""btn btn-primary"">Button z linkiem</a>
    </div>
</div>

<h2>
    Creating new account
</h2>

Creates new account with random key.
<br />
<br />
<em>example:</em> <a href=""/account/create"">/account/create</a>
<br />
<em>param");
            WriteLiteral(@"eters: </em>none

<h2>
    Get information about account
</h2>

Gets assets trusted by account with information about balance.
<br />
<br />
<em>example:</em> <a href=""/account/get?accountId=GDANJO62FTGGSAN2Q3IMG4N4RYR4QTGXY3EHRPQF66KAUEJLL7WNJ3RZ"">/account/get?accountId={accountId}</a>
<br />
<em>parameters: </em>
<ul>
    <li><strong>AccountId</strong> - public key which was used to create account</li>
</ul>

<h2>
    Create trustline
</h2>

Creates trust.
<br />
<br />
<em>example:</em> <a href=""/account/createTrustline?issuerSeed=SAUWSODLYZ76M5UUA4QWDOLCUNIF7LW6AEVJ5M5DILOPW6S3TESCDYMH&receiverSeed=SBYOTSZR2L3M3X4UO3JSQEUQ3C6WC42PPL6LJH7GGJGEOF7EEPQA2DJW"">/account/createTrustline?issuerSeed={issuerSeed}&receiverSeed={receiverSeed}</a>
<br />
<em>parameters: </em>
<ul>
    <li><strong>issuerSeed</strong> - issuer account secret seed</li>
    <li><strong>receiverSeed</strong> - receiver account secret seed</li>
</ul>

<h2>
    Send eCoin
</h2>

Transfers eCoin between two ");
            WriteLiteral(@"accounts.
<br />
<br />
<em>example:</em> <a href=""/account/send?issuerSeed=SAUWSODLYZ76M5UUA4QWDOLCUNIF7LW6AEVJ5M5DILOPW6S3TESCDYMH&receiverSeed=SBYOTSZR2L3M3X4UO3JSQEUQ3C6WC42PPL6LJH7GGJGEOF7EEPQA2DJW&amount=10"">/account/send?issuerSeed={issuerSeed}&receiverSeed={receiverSeed}&amount={amount}</a>
<br />
<em>parameters: </em>
<ul>
    <li><strong>issuerSeed</strong> - issuer account secret seed</li>
    <li><strong>receiverSeed</strong> - receiver account secret seed</li>
    <li><strong>amount</strong> - amount of eCoin to send</li>
</ul>");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
